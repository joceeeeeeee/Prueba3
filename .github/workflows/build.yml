name: SonarQube with Coverage

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Test and Analyze
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para an√°lisis completo

      - name: Install MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner (if not cached)
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool install --tool-path .\.sonar\scanner dotnet-sonarscanner

      - name: Install coverlet (for coverage)
        run: dotnet tool install --global coverlet.console

      - name: Add tools to PATH
        run: echo "$HOME/.dotnet/tools" | Out-File -FilePath $env:GITHUB_PATH -Append
        shell: pwsh

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"joceeeeeeee" `
            /o:"joceeeeeeee" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      - name: Build project
        run: msbuild GUARDERIA/GUARDERIA.sln /t:Rebuild /p:Configuration=Release

      - name: Run tests with coverage
        run: dotnet test GUARDERIA.Tests/GUARDERIA.Tests.csproj `
          --configuration Release `
          /p:CollectCoverage=true `
          /p:CoverletOutputFormat=opencover `
          /p:CoverletOutput=./TestResults/coverage.opencover.xml

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

