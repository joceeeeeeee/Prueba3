name: SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Para análisis más preciso

      - name: Install MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Create sonar cache directory
        run: New-Item -Path ~\sonar\cache -ItemType Directory -Force

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Create sonar scanner directory
        run: New-Item -Path .\.sonar\scanner -ItemType Directory -Force

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"joceeeeeeee_Prueba3" /o:"joceeeeeeee" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.coverage.exclusions="**/Program.cs,**/Startup.cs,**/*.Designer.cs"
          msbuild GUARDERIA/GUARDERIA.sln /t:Rebuild /p:Configuration=Release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
